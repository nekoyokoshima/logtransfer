##File contains a list of functions used by Amazon S3 log transfer

#Function to check if required processes are running
proccheck(){
echo -n "Checking if $1 is running........"
ps cax | awk {'print $5'} | grep -E "^$1" > /dev/null

  if [ $? -eq 0 ]; then
    echo -e "${green}[OK]$NC"
  else
    echo -e "${red}[Staring]$NC"
    service $1 start
    chkconfig $1 on
  fi
}

#Function to check if required rpm are installed
rpmcheck() {
echo -n "Checking for $1........"
if rpm -qa | grep -Eq "^$1"; then
        echo -e "${green}[OK]$NC"
else
        echo -e "${red}[failed]$NC"
echo -n "Installing $1.........."
        yum install -y $1 &>/dev/null
        retval=$?
                if [[ "$retval" == "0" ]]; then
                        echo -e "${green}[OK]$NC"
                else
                        echo -e "${red}[failed]$NC"
                        exit 1
                fi
fi
}



#Function to do the actual transfer depending on the backuptype
transfer() {
if [ -z $1 ]
	#Errs on no parameters passed
	then
	echo "No Parameters passed to function"
	return 0
fi

if [ $1 = 1 ] #Web Server Nginx Logs
	then
	echo "Backuptype = 1"
	IFS=' ' b_split=($nginx_path)
	for nginx in ${b_split[@]}
		do
			s3cmd sync $s3cmd_opts $nginx/old/ s3://$s3bucket/$hostname/WebServerLogs/
		done
fi

if [ $1 = 2 ] #Web Application Logs
	then
	echo "Backuptype = 2"
	for wwwdir in /var/www/*
		do
			echo -e "${red}$wwwdir$NC"
			folder=${wwwdir#*www/}
			s3cmd sync $s3cmd_opts $wwwdir/log/old/ s3://$s3bucket/$hostname/WebAppLogs/$folder/
		done
fi

if [ $1 = 3 ] #ABP Server Logs
        then
        echo "Backuptype = 3"
        IFS=' ' b_split=($abp_path)
        if [ ${#b_split[*]} -gt 1 ]
                then
                        for abp in ${b_split[@]}
                                do
                                        echo -e "${red}$abp$NC"
                                        folder=${abp#*home/}
                                        folder=${folder%/platform*}
                                        s3cmd sync $s3cmd_opts $abp s3://$s3bucket/$hostname/ABPServerLogs/$folder/
                                done
                else
                        echo -e "${red}$abp_path$NC"
                        s3cmd sync $s3cmd_opts $abp_path s3://$s3bucket/$hostname/ABPServerLogs/
        fi

fi

if [ $1 = 4 ] #ABP Server Tomcat Logs
	then
	echo "Backuptype = 4"
	IFS=' ' b_split=($tomcat_path)
	for tomcat in ${b_split[@]}
		do
			echo -e "${red}$tomcat_path$NC"
			s3cmd sync $s3cmd_opts $tomcat s3://$s3bucket/$hostname/ABPTomcatLogs/
		done	
fi

if [ $1 = 5 ] #MySQL Backups
	then
	echo "Backuptype = 5"
	folder[1]=01-JAN
        folder[10]=10-OCT
        folder[11]=11-NOV
        for mysqllist in $mysql_path/*
                do
                        transform=${mysqllist#*shared01.}
                        year=${transform:0:4}
                        month=${transform:5:2}
                        #echo "$year $month"
			echo ${folder[11]}
			echo "I would copy $mysqllist to $mysql_path/$year/${folder[$month]}/"
			done
				#s3cmd sync $s3cmd_opts $mysql_path s3://oglogs/mysql/2013/$mysqllist/
fi

if [ $1 = 6 ] #Custom folder. Path set in custom_foler in $conf
	then
	echo "Backuptype = 6"
fi
}


